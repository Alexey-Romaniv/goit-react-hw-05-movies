{"version":3,"file":"static/js/983.e3e91451.chunk.js","mappings":"8PAEaA,EAAoB,mCAAG,WAAMC,GAAN,0FAGxBC,EAAAA,EAAAA,IAAM,gBAAiB,CAC/BC,OAAQ,CACNC,QAAS,mCACTH,MAAAA,KAN8B,uBAExBI,EAFwB,EAEhCC,KAAQD,QAFwB,kBAS3BA,GAT2B,2CAAH,sD,oCCApBE,EAAOC,EAAAA,GAAAA,KAAH,0CAGJC,EAAQD,EAAAA,GAAAA,MAAH,mVAoBLE,EAASF,EAAAA,GAAAA,OAAH,oR,SCpBnBG,IAAAA,OAAAA,KAAqB,CACnBC,MAAO,QACPC,SAAU,WACVC,SAAU,QACVC,QAAS,EACTC,SAAU,SAIL,IAAMC,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC3B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOlB,EAAP,KAAcmB,EAAd,KAWMC,EAAW,SAAAC,GAEf,GADAA,EAAEC,iBACmB,KAAjBtB,EAAMuB,OACR,OAAOb,IAAAA,OAAAA,QAAwB,oBAEjCO,EAAajB,GARbmB,EAAS,GAUV,EAED,OACE,UAACb,EAAD,CAAMc,SAAU,SAAAC,GAAC,OAAID,EAASC,EAAb,EAAjB,WACE,SAACb,EAAD,CACEgB,MAAOxB,EACPyB,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SA3BoB,SAAAT,GACxB,IAAQG,EAAUH,EAAEU,OAAZP,MACRL,EAASK,EAAMQ,cAChB,KA0BG,SAACvB,EAAD,uBAGL,E,kBC5CYwB,EAAa,WACxB,MCFqC,WACrC,OAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeC,EAAf,KACA,GAAkCjB,EAAAA,EAAAA,WAAS,GAA3C,eAAOkB,EAAP,KAAkBC,EAAlB,KACA,GAA0BnB,EAAAA,EAAAA,UAAS,MAAnC,eAAOoB,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcF,EAAaG,IAAI,SAerC,OATAC,EAAAA,EAAAA,YAAU,WACHF,IACLN,GAAa,GACbtC,EAAqB4C,GAClBG,KAAKX,GACLY,MAAMR,GACNS,SAAQ,kBAAMX,GAAa,EAAnB,IACZ,GAAE,CAACM,IAEG,CAAET,OAAAA,EAAQE,UAAAA,EAAWE,MAAAA,EAAOrB,aAbd,SAAAjB,GACnB0C,EAAgB,CAAE1C,MAAOA,GAC1B,EAYF,CDpBoDiD,GAA3Cf,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,UAAWE,EAA3B,EAA2BA,MAAOrB,EAAlC,EAAkCA,aAElC,OACE,iCACE,SAACD,EAAD,CAAYC,aAAcA,IACzBqB,IAAS,kDACTF,IAAa,SAACc,EAAA,EAAD,KACP,OAANhB,QAAM,IAANA,OAAA,EAAAA,EAAQiB,QAAS,IAAK,SAACC,EAAA,EAAD,CAAYlB,OAAQA,MAGhD,C","sources":["utils/fetchSearchingMovies.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/SearchPage/SearchPage.jsx","hooks/useFetchSearchingMovies.js"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchSearchingMovies = async query => {\n  const {\n    data: { results },\n  } = await axios('/search/movie', {\n    params: {\n      api_key: '65573c76cf88d807ccbaf09ca79feb15',\n      query,\n    },\n  });\n  return results;\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 10px;\n`;\nexport const Input = styled.input`\n  width: 300px;\n  padding: 6px 70px 6px 6px;\n  font-size: 20px;\n  background: #f4f4f4;\n  border: 1px solid #c5c5c5;\n  border-radius: 6px;\n\n  order: 1;\n  align-self: stretch;\n\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    outline: 1px solid #4cc6f5;\n  }\n  &::placeholder {\n    font: inherit;\n  }\n`;\nexport const Button = styled.button`\n  padding: 6px;\n  font-size: 20px;\n  color: #ffffff;\n  background: #4cc6f5;\n  border: 1px solid #c5c5c5;\n  border-radius: 6px;\n\n  order: 1;\n  align-self: stretch;\n\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    background: #29abdd;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { Form, Input, Button } from './SearchForm.styled.js';\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'left-top',\n  distance: '100px',\n  opacity: 1,\n  fontSize: '16px',\n  // ...\n});\n\nexport const SearchForm = ({ handleSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSearchInput = e => {\n    const { value } = e.target;\n    setQuery(value.toLowerCase());\n  };\n\n  const onFormReset = () => {\n    setQuery('');\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return Notiflix.Notify.warning('Enter movie name');\n    }\n    handleSubmit(query);\n    onFormReset();\n  };\n\n  return (\n    <Form onSubmit={e => onSubmit(e)}>\n      <Input\n        value={query}\n        type=\"text\"\n        name=\"query\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={handleSearchInput}\n      />\n      <Button>Search</Button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import { useFetchSearchingMovies } from 'hooks/useFetchSearchingMovies';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\n\nexport const SearchPage = () => {\n  const { movies, isLoading, error, handleSubmit } = useFetchSearchingMovies();\n\n  return (\n    <>\n      <SearchForm handleSubmit={handleSubmit} />\n      {error && <p>Ooops! Something wrong</p>}\n      {isLoading && <Loader />}\n      {movies?.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchingMovies } from '../utils/fetchSearchingMovies';\n\nexport const useFetchSearchingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n\n  const handleSubmit = query => {\n    setSearchParams({ query: query });\n  };\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    setIsLoading(true);\n    fetchSearchingMovies(searchQuery)\n      .then(setMovies)\n      .catch(setError)\n      .finally(() => setIsLoading(false));\n  }, [searchQuery]);\n\n  return { movies, isLoading, error, handleSubmit };\n};\n"],"names":["fetchSearchingMovies","query","axios","params","api_key","results","data","Form","styled","Input","Button","Notiflix","width","position","distance","opacity","fontSize","SearchForm","handleSubmit","useState","setQuery","onSubmit","e","preventDefault","trim","value","type","name","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","SearchPage","movies","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","then","catch","finally","useFetchSearchingMovies","Loader","length","MoviesList"],"sourceRoot":""}