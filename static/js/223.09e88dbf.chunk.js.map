{"version":3,"file":"static/js/223.09e88dbf.chunk.js","mappings":"4OAEaA,EAAY,mCAAG,WAAMC,GAAN,yFAGhBC,EAAAA,GAAAA,IAAA,iBAAoBD,GAAM,CAClCE,OAAQ,CACNC,QAAS,sCALa,uBAEhBC,EAFgB,EAExBC,KAAQD,QAFgB,kBAQnBA,GARmB,2CAAH,sD,2BCCZE,EAAU,WACrB,MCA6B,WAC7B,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OAPAE,EAAAA,EAAAA,YAAU,WACRL,GAAa,GACbZ,EAAa,GAAD,OAAIe,EAAJ,aACTG,KAAKR,GACLS,MAAML,GACNM,SAAQ,kBAAMR,GAAa,EAAnB,GACZ,GAAE,CAACG,IACG,CAAEN,QAAAA,EAASE,UAAAA,EAAWE,MAAAA,EAC9B,CDduCQ,GAA9BZ,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,UAAWE,EAA5B,EAA4BA,MAC5B,OACE,gCACGF,IAAa,SAACW,EAAA,EAAD,IACbT,IAAS,iDACF,OAAPJ,QAAO,IAAPA,GAAAA,EAASc,QACR,wBACGd,EAAQe,KAAI,gBAAGvB,EAAH,EAAGA,GAAIwB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGzB,EADE,OAQf,uEAIP,C","sources":["utils/fetchReviews.js","pages/Reviews/Reviews.jsx","hooks/useFetchReviews.js"],"sourcesContent":["import axios from 'axios';\n\nexport const FetchReviews = async id => {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: '65573c76cf88d807ccbaf09ca79feb15',\n    },\n  });\n  return results;\n};\n","import { useFetchReviews } from 'hooks/useFetchReviews';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const Reviews = () => {\n  const { reviews, isLoading, error } = useFetchReviews();\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Oops! Something wrong</p>}\n      {reviews?.length ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h2>{author}</h2>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h3>We don`t have any reviews for this movie</h3>\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { FetchReviews } from 'utils/fetchReviews';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchReviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n    FetchReviews(`${movieId}/reviews`)\n      .then(setReviews)\n      .catch(setError)\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n  return { reviews, isLoading, error };\n};\n"],"names":["FetchReviews","id","axios","params","api_key","results","data","Reviews","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","then","catch","finally","useFetchReviews","Loader","length","map","author","content"],"sourceRoot":""}